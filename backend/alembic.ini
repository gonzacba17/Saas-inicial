# ==============================================
# CONFIGURACIÓN ALEMBIC PARA CAFETERIA IA
# ==============================================

[alembic]
# Directorio donde están los scripts de migración
script_location = alembic

# Template para generar nombres de archivos de migración
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d_%%(rev)s_%%(slug)s

# sys.path path, será añadido a sys.path si está presente
prepend_sys_path = .

# Zona horaria para las migraciones
timezone = America/Mexico_City

# Longitud máxima para el "slug"
max_length = 40

# Ejecutar environment durante 'revision' command
revision_environment = false

# Permitir archivos .pyc y .pyo sin .py
sourceless = false

# Formato del número de versión
version_num_format = %%(rev)s

# Encoding de salida para archivos de revision
output_encoding = utf-8

# URL de la base de datos - se sobrescribe en env.py
sqlalchemy.url = postgresql://postgres:postgres@localhost:5432/cafeteria_ia


[post_write_hooks]
# Formatear con black después de generar migraciones
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 88 REVISION_SCRIPT_FILENAME

# ==============================================
# CONFIGURACIÓN DE LOGGING
# ==============================================

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S