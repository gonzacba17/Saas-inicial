name: 🧪 Tests Anti-Timeout

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: "3.11"

jobs:
  test:
    name: 🚀 Tests Unitarios
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install pytest pytest-timeout pytest-cov pytest-asyncio httpx
        
    - name: 🧪 Run tests
      env:
        TESTING: true
        USE_SQLITE: true
        SECRET_KEY: test-secret-key-ci
        PYTHONPATH: backend
      run: |
        # Test de verificación primero
        python -c "
        import sys
        sys.path.insert(0, 'backend')
        from app.main import app
        print('✅ App cargada correctamente en CI')
        "
        
        # Ejecutar tests con timeout
        python -m pytest tests/ \
          -v \
          --tb=short \
          --timeout=60 \
          --maxfail=5 \
          --cov=backend/app \
          --cov-report=xml \
          --junit-xml=test-results.xml
          
    - name: 📊 Upload coverage
      uses: codecov/codecov-action@v3
      if: always()
      with:
        file: ./coverage.xml
        
    - name: 📋 Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: test-results.xml